@model gym.Models.Membership

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Membership</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("Create", "Memberships", FormMethod.Post))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.MemberId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.MemberId, (SelectList)ViewBag.MemberId, htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MembershipType, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.MembershipType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MembershipType, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        }
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
